# Form implementation generated from reading ui file 'c:\Users\provj709\Documents\ResearchandDevelopment\Routine-Walkthrough\routine-walkthrough\routine_walkthrough\routine_viewer.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

import json
from PyQt6.QtCore import QSize, Qt
from PyQt6.QtGui import QAction, QIcon
from PyQt6.QtWidgets import (
    QApplication,
    QCheckBox,
    QLabel,
    QMainWindow,
    QStatusBar,
    QToolBar,
    #QDialog #experiment
)
from PyQt6 import QtCore, QtGui, QtWidgets

from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_RoutineViewer(QMainWindow):
    def __init__(self, f = 0):
        super().__init__()
        self.setObjectName("RoutineViewer")
        self.resize(400, 300)
        gridLayoutWidget = QtWidgets.QWidget(parent=self)
        gridLayoutWidget.setGeometry(QtCore.QRect(9, 9, 371, 271))
        gridLayoutWidget.setObjectName("gridLayoutWidget")
        gridLayout = QtWidgets.QGridLayout(gridLayoutWidget)
        gridLayout.setContentsMargins(0, 0, 0, 0)
        gridLayout.setObjectName("gridLayout")
        end_button = QtWidgets.QPushButton(parent=gridLayoutWidget)
        end_button.setObjectName("end_button")
        end_button.setText("End")
        end_button.clicked.connect(self.end)
        gridLayout.addWidget(end_button, 1, 1, 1, 1)
        next_button = QtWidgets.QPushButton(parent=gridLayoutWidget)
        next_button.setObjectName("next_button")
        next_button.setText("Next")
        next_button.clicked.connect(self.next)
        gridLayout.addWidget(next_button, 0, 1, 1, 1)
        self.name_label = QtWidgets.QLabel(parent=gridLayoutWidget)
        self.name_label.setObjectName("name_label")
        gridLayout.addWidget(self.name_label, 0, 0, 1, 1)
        self.description_label = QtWidgets.QLabel(parent=gridLayoutWidget)
        self.description_label.setObjectName("description_label")
        gridLayout.addWidget(self.description_label, 1, 0, 1, 1)
        self.count_end = 0
        self.count = 0

        #self.retranslateUi()
        #self.next_button.triggered(self.printing)#.connect(self.name_label.show) # type: ignore
        #self.end_button.clicked.connect(self.description_label.show)#setText("hi")) # type: ignore
        #QtCore.QMetaObject.connectSlotsByName(self)
        if f == 1:
            print("True")
        else:
            print("False")
        self.next()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("RoutineViewer", "RoutineViewer"))
        #self.end_button.setText(_translate("RoutineViewer", "End"))
        #self.next_button.setText(_translate("RoutineViewer", "Next"))
        self.name_label.setText(_translate("RoutineViewer", "place holder for name of item in routine"))
        self.description_label.setText(_translate("RoutineViewer", "place holder for description of item in routine"))
    
    def next(self):#give routine and keyholder if possible. if not make them contained with self
        print("next")
        print(str(self.count))
        #need to have save in case there were any modifications
        self.name_label.setText(str(self.count))
        self.description_label.setText(str(self.count%4))
        self.count += 1
        """#planning
        if self.count == len(self.keyholder):
            self.keyholder.append(str(self.count))
            self.routine[self.keyholder[self.count]] = self.count
        
        self.name_label.setText(str(self.keyholder[self.count]))
        self.description_label.setText(str(self.routine[self.keyholder[self.count_next]]))
        
        """
    
    def end(self):
        print("End")
        print(str(self.count_end))
        #need to have save in case there were any modifications
        self.count += 1
        
"""
app = QApplication(sys.argv)
w = Ui_RoutineViewer()
w.setupUi(Ui_RoutineViewer())
w.show()
app.exec()"""