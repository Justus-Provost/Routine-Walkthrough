# Form implementation generated from reading ui file 'c:\Users\provj709\Documents\ResearchandDevelopment\Routine-Walkthrough\routine-walkthrough\routine_walkthrough\routine_select.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

#from routine_walkthrough import routines
import json
from PyQt6.QtCore import QSize, Qt
from PyQt6.QtGui import QAction, QIcon
from PyQt6.QtWidgets import (
    QApplication,
    QCheckBox,
    QLabel,
    QMainWindow,
    QStatusBar,
    QToolBar,
    QPushButton,
    #QAction,
    #QDialog #experiment
)

#from main_window_template_ui import Ui_MainWindow as umw
#from second_window_template_ui import Ui_SecondWindow as usw

from PyQt6 import QtCore, QtGui, QtWidgets

from routine_viewer_ui import Ui_RoutineViewer as urv

#app = QApplication(sys.argv)

class Ui_RoutineSelect(QMainWindow):
    def __init__(self):
        super().__init__()
        self.r = ["place_holder", "another_place_holder"]
        self.w = None
        self.setObjectName("RoutineSelect")
        self.resize(266, 194)
        self.centralwidget = QtWidgets.QWidget(parent=self)
        self.centralwidget.setObjectName("centralwidget")
        self.instruction_select_text = QtWidgets.QLabel(parent=self.centralwidget)
        self.instruction_select_text.setGeometry(QtCore.QRect(0, 0, 261, 151))
        self.instruction_select_text.setWordWrap(True)
        self.instruction_select_text.setObjectName("instruction_select_text")
        self.setCentralWidget(self.centralwidget)
        """self.menubar = QtWidgets.QMenuBar(parent=self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 266, 21))
        self.menubar.setObjectName("menubar")"""
        toolbar = QToolBar("THE toolbar")
        self.addToolBar(toolbar)
        menuplace_holder_1 = QAction("toolbar_placeholder_1", self)#parent=self.menubar)
        #self.menuplace_holder_1 = QtWidgets.QPushButton(parent=self.menubar)
        menuplace_holder_1.setObjectName("menuplace_holder_1")
        
        menuplace_holder_1.triggered.connect(self.open_first)#())# this breaks it but it still doesn't work properly
        toolbar.addAction(menuplace_holder_1)
        #menuplace_holder_1.menuAction()
        #self.menuplace_holder_1.clicked.connect(self.open_viewer)
        menuplace_holder_2 = QAction("toolbar_placeholder_2", self)#parent=self.menubar)
        menuplace_holder_2.setObjectName("menuplace_holder_2")
        menuplace_holder_2.triggered.connect(self.open_second)
        toolbar.addAction(menuplace_holder_2)
        #self.setMenuBar(self.menubar)
        """self.statusbar = QtWidgets.QToolBar(parent=self)
        self.statusbar.setObjectName("statusbar")
        self.addToolBar(self.statusbar)"""
        """self.menubar.addAction(menuplace_holder_1.menuAction())
        #self.menubar.addAction(self.menuplace_holder_1)
        self.menubar.addSeparator()
        self.menubar.addAction(self.menuplace_holder_2.menuAction())"""

        """for i in self.r:
            self.menubar.addSeparator()
            self.menuplace_holder = QtWidgets.QMenu(parent=self.menubar)#
            self.menuplace_holder.setObjectName(i)
            self.menubar.addAction(self.menuplace_holder.menuAction())
            print(i)"""
        #for i in self.r:
        #    self.menubar.addAction(self.menuplace_holder.menuAction())#
        
        #menuplace_holder_1.setTitle("place_holder_1")
        self.retranslateUi(self)
        #self.menubar.triggered['QAction*'].connect(self.open_viewer) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(self)
        #self.open_viewer(self.v)
        """self.x = urv()
        self.x.setupUi(self)
        self.x.show()"""
        #self.open_viewer()
        #self.open_viewer()

    def retranslateUi(self, RoutineSelect):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("RoutineSelect", "RoutineSelect"))
        self.instruction_select_text.setText(_translate("RoutineSelect", "Choose which routine to walkthrough from the toolbar."))
        #menuplace_holder_1.setTitle(_translate("RoutineSelect", "place_holder_1"))
        #self.menuplace_holder_2.setTitle(_translate("RoutineSelect", "place_holder_2"))
        #for i in self.r:
        #    self.menuplace_holder.setTitle(_translate("RoutineSelect", str(i)))#
    
    def open_first(self):# try to come up with a different solution if possible
        self.open_viewer(1)

    def open_second(self):
        self.open_viewer(2)
    
    def open_viewer(self, v = 0):
        print("here")
        print(str(v))
        v = v - 1
        #self.close()
        #startup_viewer()
        #if self.w == None:
        print("open viewer")
        #app = QApplication(sys.argv)
        self.w = urv(v)
        #self.v.setupUi(self)
        #self.v.retranslateUi(self)
        self.w.show()
        #app.exec()
            

        #else:
            #print("close viewer")
            #self.w = None
            
def startUp():
    routine = ["place_holder", "another_place_holder"]
    app1 = QApplication(sys.argv)
    w = Ui_RoutineSelect()#routine)
    #w.setupUi(routine)
    w.show()
    app1.exec()

"""def startup_viewer(w = None):
    print("here 2")
    if w == None:
        print("startup viewer")
        #app2 = QApplication(sys.argv)
        w = urv(1)
        #self.v.setupUi(self)
        #self.v.retranslateUi(self)
        w.show()
        #app2.exec()
        #finish_app2 = app2.exec()
        #handle_finish = finish_app2
    else:
        print("close viewer")
        #v = None
    #sys.exit(Ui_RoutineSelect)
    #return w"""
"""app = QApplication(sys.argv)
RoutineSelect = Ui_RoutineSelect()
RoutineSelect.setupUi(RoutineSelect)
RoutineSelect
app.exec()"""