# Form implementation generated from reading ui file 'c:\Users\provj709\Documents\ResearchandDevelopment\Routine-Walkthrough\routine-walkthrough\routine_walkthrough\routine_select.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

#from routine_walkthrough import routines
import json
from PyQt6.QtCore import QSize, Qt
from PyQt6.QtGui import QAction, QIcon
from PyQt6.QtWidgets import (
    QApplication,
    QCheckBox,
    QLabel,
    QMainWindow,
    QStatusBar,
    QToolBar,
    #QDialog #experiment
)

#from main_window_template_ui import Ui_MainWindow as umw
#from second_window_template_ui import Ui_SecondWindow as usw

from PyQt6 import QtCore, QtGui, QtWidgets

from routine_viewer_ui import Ui_RoutineViewer as urv

app = QApplication(sys.argv)

class Ui_RoutineSelect(QMainWindow):
    def setupUi(self, RoutineSelect, r):
        self.r = r
        self.v = None
        RoutineSelect.setObjectName("RoutineSelect")
        RoutineSelect.resize(266, 194)
        self.centralwidget = QtWidgets.QWidget(parent=RoutineSelect)
        self.centralwidget.setObjectName("centralwidget")
        self.instruction_select_text = QtWidgets.QLabel(parent=self.centralwidget)
        self.instruction_select_text.setGeometry(QtCore.QRect(0, 0, 261, 151))
        self.instruction_select_text.setWordWrap(True)
        self.instruction_select_text.setObjectName("instruction_select_text")
        RoutineSelect.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=RoutineSelect)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 266, 21))
        self.menubar.setObjectName("menubar")
        self.menuplace_holder_1 = QtWidgets.QMenu(parent=self.menubar)
        self.menuplace_holder_1.setObjectName("menuplace_holder_1")
        self.menuplace_holder_1.triggered.connect(self.open_viewer)#())# this breaks it but it still doesn't work properly
        self.menuplace_holder_2 = QtWidgets.QMenu(parent=self.menubar)
        self.menuplace_holder_2.setObjectName("menuplace_holder_2")
        
        RoutineSelect.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=RoutineSelect)
        self.statusbar.setObjectName("statusbar")
        RoutineSelect.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuplace_holder_1.menuAction())
        self.menubar.addSeparator()
        self.menubar.addAction(self.menuplace_holder_2.menuAction())
        for i in self.r:
            self.menubar.addSeparator()
            self.menuplace_holder = QtWidgets.QMenu(parent=self.menubar)#
            self.menuplace_holder.setObjectName(i)
            self.menubar.addAction(self.menuplace_holder.menuAction())
            print(i)
        #for i in self.r:
        #    self.menubar.addAction(self.menuplace_holder.menuAction())#
        

        self.retranslateUi(RoutineSelect)
        self.menubar.triggered['QAction*'].connect(self.instruction_select_text.show) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(RoutineSelect)

    def retranslateUi(self, RoutineSelect):
        _translate = QtCore.QCoreApplication.translate
        RoutineSelect.setWindowTitle(_translate("RoutineSelect", "RoutineSelect"))
        self.instruction_select_text.setText(_translate("RoutineSelect", "Choose which routine to walkthrough from the toolbar."))
        self.menuplace_holder_1.setTitle(_translate("RoutineSelect", "place_holder_1"))
        self.menuplace_holder_2.setTitle(_translate("RoutineSelect", "place_holder_2"))
        for i in self.r:
            self.menuplace_holder.setTitle(_translate("RoutineSelect", str(i)))#
    
    def open_viewer(self):
        print("here")
        if self.v == None:
            self.v = urv()
            self.v.setupUi(self)
            self.v.show()

        else:
            self.v = None
            

"""app = QApplication(sys.argv)
RoutineSelect = Ui_RoutineSelect()
RoutineSelect.setupUi(RoutineSelect)
RoutineSelect
app.exec()"""